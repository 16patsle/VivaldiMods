(function MouseGesturesCheatSheet() {"use strict";const ADD_BUTTON_AS_CHILD = "#footer > div.status-toolbar";class GestureTree {dfsAsList(list = [], previousGesture = "") {if (this.action) {list.push([this.action, previousGesture]);}if (this.up) {const fullGesture = previousGesture + "↑";this.up.dfsAsList(list, fullGesture);}if (this.right) {const fullGesture = previousGesture + "→";this.right.dfsAsList(list, fullGesture);}if (this.down) {const fullGesture = previousGesture + "↓";this.down.dfsAsList(list, fullGesture);}if (this.left) {const fullGesture = previousGesture + "←";this.left.dfsAsList(list, fullGesture);}return list;}printall(depth = 1, previousGesture = "", completeString = { val: "" }) {let indent = Array(depth).join("│") + "├";if (this.up) {const fullGesture = previousGesture + "↑";const actionName = this.up.action ? this.up.action + " (" + fullGesture + ")" : ".";completeString.val += indent + "U: " + actionName + "\n";this.up.printall(depth + 1, fullGesture, completeString);}if (this.right) {const fullGesture = previousGesture + "→";const actionName = this.right.action ? this.right.action + " (" + fullGesture + ")" : ".";completeString.val += indent + "R: " + actionName + "\n";this.right.printall(depth + 1, fullGesture, completeString);}if (this.down) {const fullGesture = previousGesture + "↓";const actionName = this.down.action ? this.down.action + " (" + fullGesture + ")" : ".";completeString.val += indent + "D: " + actionName + "\n";this.down.printall(depth + 1, fullGesture, completeString);}if (this.left) {const fullGesture = previousGesture + "←";const actionName = this.left.action ? this.left.action + " (" + fullGesture + ")" : ".";completeString.val += indent + "L: " + actionName + "\n";this.left.printall(depth + 1, fullGesture, completeString);}return completeString.val;}addGesture(action, gesture) {if (gesture === "") {this.action = action;return;}if (gesture[0] === "6") {if (!this.up) {this.up = new GestureTree();}this.up.addGesture(action, gesture.substr(1));}else if (gesture[0] === "0") {if (!this.right) {this.right = new GestureTree();}this.right.addGesture(action, gesture.substr(1));}else if (gesture[0] === "2") {if (!this.down) {this.down = new GestureTree();}this.down.addGesture(action, gesture.substr(1));}else if (gesture[0] === "4") {if (!this.left) {this.left = new GestureTree();}this.left.addGesture(action, gesture.substr(1));}}}function makeGuiButton() {const parent = document.querySelector(ADD_BUTTON_AS_CHILD);const newbutton = document.createElement("span");newbutton.innerHTML = `<button title="Toggle images and animation" class="button-toolbar-small image-action animationAlways" tabindex="-1"><svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M7.5 0c-3.025 0-5.5 2.314-5.5 5.143v5.714c0 2.829 2.475 5.143 5.5 5.143s5.5-2.314 5.5-5.143v-5.714c0-2.829-2.475-5.143-5.5-5.143zm-3.5 5.322c0-1.637 1.29-3.006 3-3.322v4h-3v-.678zm7 5.761c0 1.608-1.571 2.917-3.5 2.917-1.931 0-3.5-1.309-3.5-2.917v-4.083h7v4.083zm-3-5.083v-4c1.709.315 3 1.685 3 3.322v.678h-3z"></path></svg></button>`;newbutton.querySelector("button").addEventListener("click", guiButtonClicked);parent.appendChild(newbutton);}function guiButtonClicked(event) {chrome.storage.local.get(data => {const gt = buildGestureTree(data);displayVisual(gt.dfsAsList());});}function buildGestureTree(data) {let baseTree = new GestureTree();for (let key in data) {if (data[key].gestures) {for (let gesture in data[key].gestures) {let actionName = key.substr("COMMAND_".length);let words = actionName.split("_");for (let i = 0; i < words.length; i++) {words[i] = words[i][0].toUpperCase() + words[i].slice(1).toLowerCase();}actionName = words.join(" ");baseTree.addGesture(actionName, data[key].gestures[gesture]);}}}return baseTree;}function displayVisual(listOfPairs) {const modal = document.createElement("div");modal.id = "modal-bg";modal.className = "show-keyboard-shortcuts-modal-top float top";let innerHTML = `<div><div class="keyboardShortcutsWrapper"><header><h1>Mouse Gestures Cheat Sheet</h1><button class="close"><svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18"><path d="M13.5 6l-1.4-1.4-3.1 3-3.1-3L4.5 6l3.1 3.1-3 2.9 1.5 1.4L9 10.5l2.9 2.9 1.5-1.4-3-2.9"></path></svg></button></header><div class="keystrokes"><div data-ignore-search="true"><div class="setting-single"><div class="keystrokes"><div class="category show"><button>All Gestures</button><div class="list"><p>`;for (let i = 0; i < listOfPairs.length; i++) {innerHTML += `<div class="keycombo"><label>` + listOfPairs[i][0] + `</label><input type="button" disabled="" class="item" value="` + listOfPairs[i][1] + `"></div>`;}innerHTML += `</p></div></div></div></div></div></div></div></div>`;modal.innerHTML = innerHTML;modal.querySelector("button").addEventListener("click", event => {modal.parentElement.removeChild(modal);});document.querySelector("#browser").appendChild(modal);}function main() {if (document.querySelector(ADD_BUTTON_AS_CHILD)) {makeGuiButton();}else {setTimeout(main, 500);}}setTimeout(main, 500);})();